# ToDo:
#   https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions?tool=powershell#setting-an-output-parameter
#   https://github.com/wraithan/cargo-bump

name: Release a new version

defaults:
  run:
    shell: pwsh

on:
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  merged_build:
    name: Merged build
    if: github.event.pull_request.merged
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{matrix.os}}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Get bump tag
        run: |
          $COMMIT_MESSAGE = (git show --no-patch --pretty=%s%n%b)
          $GUID = (New-Guid).Guid
          "COMMIT_MESSAGE<<${$GUID}`n${$COMMIT_MESSAGE}`n${$GUID}" >> Env:GITHUB_ENV
          if       ($COMMIT_MESSAGE -match '!major') {
            $BUMP_TAG = 'major'
          } elseif ($COMMIT_MESSAGE -match '!minor') {
            $BUMP_TAG = 'minor'
          } elseif ($COMMIT_MESSAGE -match '!patch') {
            $BUMP_TAG = 'patch'
          } else {Exit(1)}
          "BUMP_TAG=${$BUMP_TAG}" >> Env:GITHUB_ENV
      
      - name: Bump version
        run: |
          cargo install cargo-edit
          cargo set-version --bump (Get-Content -Path Env:BUMP_TAG)
          "VERSION_STRING=${'v' + (Get-Content -Raw .\cargo.toml | Select-String -Pattern '(?s)\[package\].*?version = "(\d\.\d\.\d)"').Matches.Groups[1].Value}" >> Env:GITHUB_ENV
      
      - name: Update
        run: cargo update
      
      - name: Build
        run: cargo build --release --verbose
      
      - name: Package
        run: |
          New-Item -ItemType Directory -Path ./artifacts/; 
          Compress-Archive -Path './target/release/*' -DestinationPath './artifacts/soundsense-rs-' + (Get-Content -Path Env:VERSION_STRING) + '-${{runner.os}}.zip'
      
      - name: Commit
        run: |
          git add cargo.toml
          git commit -m ("Automated version bump to " + (Get-Content -Path Env:VERSION_STRING))
      
      - name: Tag
        run: git tag (Get-Content -Path Env:VERSION_STRING)
      
      - name: Push back
        run: git push --tags
      
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/*
          body: ${{env.COMMIT_MESSAGE}}
